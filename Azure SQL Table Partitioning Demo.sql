

------------------------------------
-- PARTITION FUNCTION & SCHEME
------------------------------------

	CREATE PARTITION FUNCTION PART_FN_BIGINT_VALUE (BIGINT) AS RANGE LEFT 
	FOR VALUES ( 100000,  200000,  300000,  400000,  500000,  600000,  700000,  800000,  900000, 1000000, 
	            1100000, 1200000, 1300000, 1400000, 1500000, 1600000, 1700000, 1800000, 1900000)
	GO


	CREATE PARTITION SCHEME PART_SCHEME_BIGINT_VALUE 
	AS PARTITION PART_FN_BIGINT_VALUE 
	ALL TO ([PRIMARY]);
	GO

	SELECT * FROM sys.partition_functions
	SELECT * FROM sys.partition_range_values
	SELECT * FROM sys.partition_schemes

------------------------------------
-- PARTITIONED TABLE
------------------------------------

	GO
	CREATE TABLE dbo.TBL_PARTED 
	(
	  ID bigint IDENTITY(1,1),
	  PARTED_VALUE bigint NOT NULL,
	  LONG_STRING nvarchar(2000),
	  CONSTRAINT [PK_TBL_PARTED] PRIMARY KEY CLUSTERED (ID ASC, PARTED_VALUE)
	) ON PART_SCHEME_BIGINT_VALUE (PARTED_VALUE)
	GO

	CREATE TABLE dbo.TBL_NORMAL
	(
	  ID bigint IDENTITY(1,1),
	  PARTED_VALUE bigint NOT NULL,
	  LONG_STRING nvarchar(2000),
	  CONSTRAINT [PK_TBL_NORMAL] PRIMARY KEY CLUSTERED (ID ASC, PARTED_VALUE)
	) 
	GO

	CREATE TABLE dbo.TBL_PARTED_STAGING 
	(
		ID bigint IDENTITY(1,1),
		PARTED_VALUE bigint NOT NULL,
		LONG_STRING nvarchar(2000),
		CONSTRAINT [PK_TBL_PARTED_STAGING] PRIMARY KEY CLUSTERED (ID ASC, PARTED_VALUE)
	) 
	GO

------------------------------------
-- FILL TABLES - 2M records
------------------------------------
	EXEC SP_INSERT_100K_AT_PARTED  0
	EXEC SP_INSERT_100K_AT_PARTED  1
	EXEC SP_INSERT_100K_AT_PARTED  2
	EXEC SP_INSERT_100K_AT_PARTED  3
	EXEC SP_INSERT_100K_AT_PARTED  4
	EXEC SP_INSERT_100K_AT_PARTED  5
	EXEC SP_INSERT_100K_AT_PARTED  6
	EXEC SP_INSERT_100K_AT_PARTED  7
	EXEC SP_INSERT_100K_AT_PARTED  8
	EXEC SP_INSERT_100K_AT_PARTED  9
	EXEC SP_INSERT_100K_AT_PARTED 10
	EXEC SP_INSERT_100K_AT_PARTED 11
	EXEC SP_INSERT_100K_AT_PARTED 12
	EXEC SP_INSERT_100K_AT_PARTED 13
	EXEC SP_INSERT_100K_AT_PARTED 14
	EXEC SP_INSERT_100K_AT_PARTED 15
	EXEC SP_INSERT_100K_AT_PARTED 16
	EXEC SP_INSERT_100K_AT_PARTED 17
	EXEC SP_INSERT_100K_AT_PARTED 18
	EXEC SP_INSERT_100K_AT_PARTED 19

	EXEC SP_INSERT_100K_AT_NORMAL 0
	EXEC SP_INSERT_100K_AT_NORMAL 1
	EXEC SP_INSERT_100K_AT_NORMAL 2
	EXEC SP_INSERT_100K_AT_NORMAL 3
	EXEC SP_INSERT_100K_AT_NORMAL 4
	EXEC SP_INSERT_100K_AT_NORMAL 5
	EXEC SP_INSERT_100K_AT_NORMAL 6
	EXEC SP_INSERT_100K_AT_NORMAL 7
	EXEC SP_INSERT_100K_AT_NORMAL 8
	EXEC SP_INSERT_100K_AT_NORMAL 9
	EXEC SP_INSERT_100K_AT_NORMAL 10
	EXEC SP_INSERT_100K_AT_NORMAL 11
	EXEC SP_INSERT_100K_AT_NORMAL 12
	EXEC SP_INSERT_100K_AT_NORMAL 13
	EXEC SP_INSERT_100K_AT_NORMAL 14
	EXEC SP_INSERT_100K_AT_NORMAL 15
	EXEC SP_INSERT_100K_AT_NORMAL 16
	EXEC SP_INSERT_100K_AT_NORMAL 17
	EXEC SP_INSERT_100K_AT_NORMAL 18
	EXEC SP_INSERT_100K_AT_NORMAL 19


------------------------------------
-- CHECK PARTITIONS
------------------------------------
	SELECT   Partition_Id, Partition_Number, Row_Count FROM sys.dm_db_partition_stats 
		WHERE object_id = object_id('TBL_PARTED'); 
	SELECT   Partition_Id, Partition_Number, Row_Count FROM sys.dm_db_partition_stats 
		WHERE object_id = object_id('TBL_NORMAL'); 
	SELECT   Partition_Id, Partition_Number, Row_Count FROM sys.dm_db_partition_stats 
		WHERE object_id = object_id('TBL_PARTED_STAGING'); 

------------------------------------
-- QUERY TIME STATISTICS
------------------------------------
	SET STATISTICS TIME ON   

	select top 1000 * from [dbo].TBL_PARTED where PARTED_VALUE between 185155 and 185354
	select top 1000 * from [dbo].TBL_NORMAL where PARTED_VALUE between 185155 and 185354

	select top 1000 * from [dbo].TBL_PARTED where PARTED_VALUE between 385155 and 385354
	select top 1000 * from [dbo].TBL_NORMAL where PARTED_VALUE between 385155 and 385354

	select top 1000 * from [dbo].TBL_PARTED where PARTED_VALUE between 1585155 and 1585354
	select top 1000 * from [dbo].TBL_NORMAL where PARTED_VALUE between 1585155 and 1585354

	select top 1000 * from [dbo].TBL_PARTED where PARTED_VALUE between 1785155 and 1785354
	select top 1000 * from [dbo].TBL_NORMAL where PARTED_VALUE between 1785155 and 1785354

	select top 1000 * from [dbo].TBL_PARTED where PARTED_VALUE between 1985155 and 1985354
	select top 1000 * from [dbo].TBL_NORMAL where PARTED_VALUE between 1985155 and 1985354

------------------------------------
-- DELETE TIME STATISTICS
------------------------------------
	SET STATISTICS TIME ON   

	delete from [dbo].TBL_PARTED where PARTED_VALUE between 185155 and 185354
	delete from [dbo].TBL_NORMAL where PARTED_VALUE between 185155 and 185354

	delete from [dbo].TBL_PARTED where PARTED_VALUE between 385155 and 385354
	delete from [dbo].TBL_NORMAL where PARTED_VALUE between 385155 and 385354

	delete from [dbo].TBL_PARTED where PARTED_VALUE between 1585155 and 1585354
	delete from [dbo].TBL_NORMAL where PARTED_VALUE between 1585155 and 1585354

	delete from [dbo].TBL_PARTED where PARTED_VALUE between 1785155 and 1785354
	delete from [dbo].TBL_NORMAL where PARTED_VALUE between 1785155 and 1785354

	delete from [dbo].TBL_PARTED where PARTED_VALUE between 1985155 and 1985354
	delete from [dbo].TBL_NORMAL where PARTED_VALUE between 1985155 and 1985354
		
------------------------------------
-- SLIDING WINDOW
------------------------------------
	-- insert 100k records 
	EXEC SP_INSERT_100K_AT_PARTED 20
	EXEC SP_INSERT_100K_AT_NORMAL 20


	-- REMOVE PARTITION
	ALTER PARTITION FUNCTION PART_FN_BIGINT_VALUE () MERGE RANGE (400000);  

	-- ADD PARTITION
	ALTER PARTITION FUNCTION PART_FN_BIGINT_VALUE () SPLIT RANGE (2000000);  
	ALTER PARTITION SCHEME [PART_SCHEME_BIGINT_VALUE] NEXT USED [PRIMARY] 

------------------------------------
-- EMPTY DATA SCENARIOS
------------------------------------

	-- SQL SERVER 2008+ and Azure SQL Database
	TRUNCATE TABLE TBL_PARTED_STAGING
	GO
	ALTER TABLE TBL_PARTED SWITCH PARTITION 9 TO TBL_PARTED_STAGING;  
	GO  

	-- SQL SERVER 2016+ and Azure SQL Database: 
	TRUNCATE TABLE TBL_PARTED WITH (PARTITIONS (15));
	TRUNCATE TABLE TBL_PARTED WITH (PARTITIONS (7 TO 11));

------------------------------------
-- RESET DATA
------------------------------------
	TRUNCATE TABLE TBL_PARTED 
	TRUNCATE TABLE TBL_NORMAL 
	TRUNCATE TABLE TBL_PARTED_STAGING 

	ALTER PARTITION FUNCTION PART_FN_BIGINT_VALUE () MERGE RANGE (2000000);  
	ALTER PARTITION SCHEME [PART_SCHEME_BIGINT_VALUE] NEXT USED [PRIMARY] 